package com.myweb.www.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

import lombok.extern.slf4j.Slf4j;

//WebSecurityConfigurerAdapter 상속 받아 환경설정.
//WebConfig에 securityConfig.class 등록.
@Slf4j
@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter{

	//비밀번호 암호화 객체 PasswordEncoder
	@Bean
	public PasswordEncoder bcPasswordEncoder() {
		return new BCryptPasswordEncoder();
	}
	
	//SuccessHandler => 사용자 커스텀 생성
	
	//FailureHandler => 사용자 커스텀 생성
	
	//UserDetail => 사용자 커스텀 생성
	

	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		// 인증 되는 객체 설정
	}
	
	@Override
	protected void configure(HttpSecurity http) throws Exception {
		// 화면에서 설정되는 권한에 따른 주소 Mapping 설정
	}

	
	
	
}
